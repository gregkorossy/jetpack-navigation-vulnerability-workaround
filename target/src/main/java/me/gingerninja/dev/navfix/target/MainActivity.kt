/*
 * Copyright 2024 Gergely Kőrössy
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package me.gingerninja.dev.navfix.target

import android.content.Intent
import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.activity.enableEdgeToEdge
import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.padding
import androidx.compose.material3.Button
import androidx.compose.material3.Scaffold
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.navigation.compose.NavHost
import androidx.navigation.compose.composable
import androidx.navigation.compose.rememberNavController
import me.gingerninja.dev.navfix.target.ui.theme.NavigationVulnerabilityWorkaroundTheme

class MainActivity : ComponentActivity() {
    override fun onNewIntent(intent: Intent) {
        val cleanIntent = intent.withoutNavData()
        super.onNewIntent(cleanIntent)
        // navController.handleDeepLink(cleanIntent)
    }

    override fun onCreate(savedInstanceState: Bundle?) {
        // we set the new intent which should not have the deep link anymore
        intent = intent.withoutNavData()

        super.onCreate(savedInstanceState)
        enableEdgeToEdge()

        setContent {
            NavigationVulnerabilityWorkaroundTheme {
                Scaffold(modifier = Modifier.fillMaxSize()) { innerPadding ->
                    AppNavHost(
                        modifier = Modifier.padding(innerPadding)
                    )
                }
            }
        }
    }
}

/**
 * Removes the [data][Intent.getData] of [Intent] if it conforms to the hardcoded values of
 * [NavDestination][androidx.navigation.NavDestination] that may allow external apps to call into any screen.
 */
fun Intent.withoutNavData(): Intent {
    val attacking = data?.run {
        // these are hardcoded values in NavDestination
        scheme == "android-app" && host == "androidx.navigation"
    } ?: false

    return if (attacking) {
        Intent(this).setData(null)
    } else {
        this
    }
}

@Composable
private fun AppNavHost(modifier: Modifier = Modifier) {
    val navController = rememberNavController()

    NavHost(
        modifier = modifier,
        navController = navController,
        startDestination = "home"
    ) {
        composable("home") {
            HomeScreen(
                modifier = Modifier.fillMaxSize(),
                onLoggedIn = {
                    navController.navigate("private")
                }
            )
        }

        composable("private") {
            PrivateScreen(
                modifier = Modifier.fillMaxSize()
            )
        }
    }
}

@Composable
private fun HomeScreen(
    modifier: Modifier = Modifier,
    onLoggedIn: () -> Unit
) {
    Column(
        modifier = modifier,
        verticalArrangement = Arrangement.Center,
        horizontalAlignment = Alignment.CenterHorizontally
    ) {
        Text("Home")
        Button(
            onClick = onLoggedIn
        ) {
            Text("It's me, I promise")
        }
    }
}


@Composable
private fun PrivateScreen(
    modifier: Modifier = Modifier
) {
    Column(
        modifier = modifier,
        verticalArrangement = Arrangement.Center,
        horizontalAlignment = Alignment.CenterHorizontally
    ) {
        Text("Private screen")
    }
}